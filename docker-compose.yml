version: '3'

services:

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELASTIC_VERSION: 7.5.0
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      xpack.security.enabled: "true"
    networks:
      - elk
    restart: on-failure
    env_file:
     - ./environment_variables 
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
        
  logstash:
    build:
      context: logstash/
      args:
        ELASTIC_VERSION: 7.5.0
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
      - ./data-inputs/netflow:/data_inputs/netflow/
    ports:
      - "5000:5000"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx1g -Xms1g"
      PYTHONIOENCODING: "UTF-8"
    networks:
      - elk
    depends_on:
      - elasticsearch
    restart: on-failure
    env_file:
     - ./environment_variables  
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
        
  kibana:
    build:
      context: kibana/
      args:
        ELASTIC_VERSION: 7.5.0
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    ports:
      - "80:5601"
    networks:
      - elk
    restart: on-failure
    depends_on:
      - elasticsearch
    env_file:
     - ./environment_variables 
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
        
  evtx-input:
    build:
      context: input-modules/evtx
    volumes:
      - ./data-inputs/evtx:/data_inputs/evtx
    restart: on-failure
    env_file:
      - ./environment_variables
    networks:
      - elk
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
        
  syslog-input:
    build:
      context: input-modules/syslog
      args:
        ELASTIC_VERSION: 7.5.0
    volumes:
      - ./input-modules/syslog/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./data-inputs/syslog:/data_inputs/syslog
      - ./data-inputs/auth:/data_inputs/auth
    networks:
      - elk
    restart: on-failure
    depends_on:
      - kibana
    env_file:
     - ./environment_variables  
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
        
  auditd-input:
    build:
      context: input-modules/auditd
      args:
        ELASTIC_VERSION: 7.5.0
    volumes:
      - ./input-modules/auditd/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./data-inputs/auditd:/data_inputs/auditd
    networks:
      - elk
    restart: on-failure
    depends_on:
      - kibana
    env_file:
     - ./environment_variables  
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
        
  nessus-input:
    build:
      context: input-modules/nessus
      args:
        ELASTIC_VERSION: 7.5.0
    volumes:
      - ./input-modules/nessus/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./data-inputs/nessus:/data_inputs/nessus
    restart: on-failure
    networks:
      - elk
    depends_on:
      - kibana
    env_file:
     - ./environment_variables
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"  
  
  netflow-input:
    build:
      context: input-modules/netflow
    volumes:
      - ./data-inputs/netflow:/data_inputs/netflow
    restart: on-failure
    env_file:
      - ./environment_variables
    networks:
      - elk
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
        
  jupyter:
    build:
      context: jupyter
    command: start.sh jupyter lab --LabApp.token=''
    volumes:
      - ./jupyter/notebooks:/home/jovyan/work
    ports:
      - "8888:8888"
    restart: on-failure
    env_file:
      - ./environment_variables
    networks:
      - elk
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"  
        
  input-module-cleanup:
    build:
      context: input-modules/cleanup
    volumes:
      - ./data-inputs:/data_inputs
    restart: on-failure
    env_file:
      - ./environment_variables
    networks:
      - elk
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
        
  # Short-lived container to set up elastic environment
  setup:
    build:
      context: setup
    env_file:
      - ./environment_variables
    networks:
      - elk
    depends_on: 
       - elasticsearch     
networks:
  elk:
    driver: bridge
