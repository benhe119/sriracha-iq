input {
	file {
		mode => "read"
		path => "/data_inputs/netflow/*.csv"
		file_completed_action => "delete"
		type => "netflow"
	}
}

filter {
	if [type] == "netflow" {

		csv {
			autodetect_column_names => true
			autogenerate_column_names => true
			columns => [
				"flow_start_time", 
				"flow_end_time", 
				"flow_duration", 
				"source.address", 
				"destination.address", 
				"source.port", 
				"destination.port", 
				"network.transport", 
				"flags", 
				"gorwarding_status", 
				"source_type_of_service", 
				"input_packets", 
				"destination.bytes", 
				"output_packets", 
				"source.bytes", 
				"input_interface", 
				"output_interface", 
				"source_bgp_as_number", 
				"destination_bgp_as_number", 
				"source_netmask", 
				"destination_netmask", 
				"destination_type_of_service", 
				"flow_direction", 
				"next_hop_router", 
				"bgp_next_hope_router", 
				"source_vlan", 
				"destination_vlan", 
				"input_source_mac_addr", 
				"output_destination_mac_addr", 
				"input_destination_mac_addr", 
				"output_source_mac_addr", 
				"mpls1", 
				"mpls2", 
				"mpls3", 
				"mpls4", 
				"mpls5", 
				"mpls6", 
				"mpls7", 
				"mpls8", 
				"mpls9", 
				"mpls10", 
				"client_latency", 
				"server_latency", 
				"application_latency", 
				"router_ip_addr", 
				"engine_type_id", 
				"export_system_id", 
				"flow_recieved_timestamp"
			]
		}
		
		date {
			match => ["flow_start_time", "ISO8601", "yyyy-mm-dd HH:mm:ss"]
			target => "flow_start_time"
			locale => "en_US"
		}
		
		
		date {
			match => ["flow_end_time", "ISO8601", "yyyy-mm-dd HH:mm:ss"]
			target => "flow_end_time"
			locale => "en_US"
		}
	}
}

output {
	elasticsearch { 
		hosts => ["elasticsearch:9200"]
		index => "netflow-${ELASTIC_VERSION}-%{+YYYY.MM.dd}"
		ilm_rollover_alias => "netflow-${ELASTIC_VERSION}"
		id => "netflow"
		user => "${ELASTIC_USER}"
		password => "${ELASTIC_PASSWORD}"
	}
	stdout { codec => rubydebug }
}